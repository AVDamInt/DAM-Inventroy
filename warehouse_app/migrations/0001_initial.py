# Generated by Django 4.2 on 2023-10-18 14:18

from django.db import migrations, models
import django.db.models.deletion
import warehouse_app.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="DeviceUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, null=True)),
                ("surname", models.CharField(max_length=50, null=True)),
                ("email", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Office",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Empty", max_length=50)),
                ("city", models.CharField(default="Empty", max_length=50)),
                ("address", models.CharField(blank=True, max_length=50, null=True)),
                ("cap", models.CharField(blank=True, max_length=50, null=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("plan", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("contract", models.CharField(max_length=50, null=True)),
                ("expiration_date", models.DateField(null=True)),
                ("renewal_date", models.DateField(blank=True, null=True)),
                ("host_name", models.CharField(blank=True, max_length=50, null=True)),
                ("make", models.CharField(max_length=50, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("memory", models.IntegerField(blank=True, null=True)),
                (
                    "memory_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EB", "Exabyte"),
                            ("PB", "Petabyte"),
                            ("TB", "Terabyte"),
                            ("GB", "Gigabyte"),
                            ("MB", "Megabyte"),
                            ("kB", "Kilobyte"),
                            ("bit", "Bit"),
                        ],
                        default="GB",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("hard_disk", models.IntegerField(blank=True, null=True)),
                (
                    "hard_disk_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EB", "Exabyte"),
                            ("PB", "Petabyte"),
                            ("TB", "Terabyte"),
                            ("GB", "Gigabyte"),
                            ("MB", "Megabyte"),
                            ("kB", "Kilobyte"),
                            ("bit", "Bit"),
                        ],
                        default="GB",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("cpu", models.CharField(blank=True, max_length=50, null=True)),
                ("addr_ip", models.CharField(default="DHCP", max_length=12, null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "Available"), (1, "Unavailable")],
                        default=0,
                        null=True,
                    ),
                ),
                (
                    "history_type",
                    models.IntegerField(
                        choices=[(0, "Storico"), (1, "Attivo")], default=0, null=True
                    ),
                ),
                ("note", models.TextField(blank=True, max_length=400, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        default=warehouse_app.models.get_foo,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="warehouse_app.company",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="warehouse_app.department",
                    ),
                ),
                (
                    "office",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="warehouse_app.office",
                    ),
                ),
                (
                    "place",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="place",
                        to="warehouse_app.place",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deviceuser",
                        to="warehouse_app.deviceuser",
                    ),
                ),
                (
                    "user_history",
                    models.ManyToManyField(
                        blank=True, null=True, to="warehouse_app.deviceuser"
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
    ]
